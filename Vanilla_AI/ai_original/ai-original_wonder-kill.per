;goals 1 and 2 = boats
;goal 3 = groups
;goal combat-arm = his unique unit type (also loads correct upgrades)
;goal 36 = good infantry -- 36 NO = don't build, YES = build, 
;       2 = only build if we don't have a BLDG-GOVTCTR. 
;goal 37 = good cavalry
;goal 38 = good horse-archers
;goal 39 = good archers

;starting goals
(defrule
        (true)
=>
        (set-goal military-parity NO)   ;goal 3
        (set-goal attack-control NO)    ;goal 4
        (set-goal need-deathmatch-villagers NO) ;goal 7

        (set-goal secondary-build YES)  ;goal 8
        (set-goal soldiers-available NO);goal 10
        (set-goal combat-supp NO)               ;goal 12

        (set-goal attack-enabled YES)   ;goal 13
        (set-goal age-advancement NO)   ;goal 14
        (set-goal make-warboat NO)              ;goal 15

        (disable-self)
)

;note that goal "enemy-soldiers" is, in wonder-kill, the siege-building goal. 
(defrule
        (true)
=>
        (set-goal upgrade-conflict NO)  ;goal 16
        (set-goal pre-unique-arm NO)    ;goal 17
        (set-goal sea-owner NO)                 ;goal 23

        (set-goal siege-available YES)  ;goal 34
        (disable-self)
)

(defrule
        (strategic-number sn-number-explore-groups != 1)
=>
        (set-strategic-number sn-number-explore-groups 1)
)

;which side are we?
(defrule
        (cc-players-building-type-count any-enemy BLDG-MONUMENT > 0)
=>
        (set-goal wonder-attempt ATTACK)
        (enable-timer t-production 60)
        (disable-self)
)

(defrule
        (building-type-count BLDG-MONUMENT > 0)
=>
        (set-goal wonder-attempt DEFEND)
        (enable-timer t-production 60)
        (disable-self)
)
;***************************************************
(defrule
        (building-type-count-total BLDG-GOVTCTR == 0)
=>
        (set-strategic-number sn-carbon-gatherer-percentage 25)
        (set-strategic-number sn-food-gatherer-percentage 25)
        (set-strategic-number sn-nova-gatherer-percentage 25)
        (set-strategic-number sn-metal-gatherer-percentage 25)
)

(defrule
        (goal wonder-attempt ATTACK)
        (building-type-count-total BLDG-GOVTCTR > 0)
=>
        (set-strategic-number sn-carbon-gatherer-percentage 30)
        (set-strategic-number sn-food-gatherer-percentage 30)
        (set-strategic-number sn-nova-gatherer-percentage 35)
        (set-strategic-number sn-metal-gatherer-percentage 5)
)

(defrule
        (goal wonder-attempt DEFEND)
        (building-type-count-total BLDG-GOVTCTR > 0)
=>
        (set-strategic-number sn-carbon-gatherer-percentage 30)
        (set-strategic-number sn-food-gatherer-percentage 30)
        (set-strategic-number sn-nova-gatherer-percentage 30)
        (set-strategic-number sn-metal-gatherer-percentage 10)
)

;***************************************************
(defrule
        (difficulty == hardest)
        (goal wonder-attempt ATTACK)
=>
        (cc-add-resource carbon 10000)
        (cc-add-resource food 10000)
        (cc-add-resource nova 10000)
        (cc-add-resource metal 10000)
        (disable-self)
)

(defrule
        (difficulty == hard)
        (goal wonder-attempt ATTACK)
=>
        (cc-add-resource carbon 5000)
        (cc-add-resource food 5000)
        (cc-add-resource nova 5000)
        (cc-add-resource metal 5000)
        (disable-self)
)

(defrule
        (difficulty == moderate)
        (goal wonder-attempt ATTACK)
=>
        (cc-add-resource carbon 1000)
        (cc-add-resource food 1500)
        (cc-add-resource nova 1500)
        (cc-add-resource metal 1000)
        (disable-self)
)

(defrule
        (difficulty == hardest)
        (goal wonder-attempt DEFEND)
=>
        (cc-add-resource carbon 5000)
        (cc-add-resource food 5000)
        (cc-add-resource nova 5000)
        (cc-add-resource metal 5000)
        (disable-self)
)

(defrule
        (difficulty == hard)
        (goal wonder-attempt DEFEND)
=>
        (cc-add-resource carbon 1000)
        (cc-add-resource food 1000)
        (cc-add-resource nova 1000)
        (cc-add-resource metal 1000)
        (disable-self)
)

(defrule
        (difficulty == moderate)
        (goal wonder-attempt DEFEND)
=>
        (cc-add-resource carbon 500)
        (cc-add-resource food 500)
        (cc-add-resource nova 500)
        (cc-add-resource metal 500)
        (disable-self)
)

;***************************************************

(defrule
        (difficulty <= moderate)
        (building-type-count-total BLDG-PREFAB <= fifteen-percent-pop)
        (can-build BLDG-PREFAB)
=>
        (build BLDG-PREFAB)
)

#load-if-defined DIFFICULTY-EASIEST
(defrule
        (military-population < 10)
        (housing-headroom < 5)
        (population-headroom > 0)
        (can-build BLDG-PREFAB)
=>
        (build BLDG-PREFAB)
)
#end-if

#load-if-defined DIFFICULTY-EASY
(defrule
        (military-population < civ-dark-rush)
        (housing-headroom < 5)
        (population-headroom > 0)
        (can-build BLDG-PREFAB)
=>
        (build BLDG-PREFAB)
)
#end-if

(defrule
        (game-time < 900)
        (building-type-count BLDG-MAIN == 0)
        (can-build BLDG-MAIN)
=>
        (build BLDG-MAIN)
)

(defrule
        (building-type-count BLDG-DROPNOVA == 0)
        (resource-found nova)
        (can-build BLDG-DROPNOVA)
=>
        (build BLDG-DROPNOVA)
)

(defrule
        (building-type-count BLDG-DROPMETAL == 0)
        (resource-found metal)
        (can-build BLDG-DROPMETAL)
=>
        (build BLDG-DROPMETAL)
)

(defrule
        (building-type-count BLDG-DROPCARBON == 0)
        (can-build BLDG-DROPCARBON)
=>
        (build BLDG-DROPCARBON)
)

(defrule
        (building-type-count BLDG-DROPANIM == 0)
        (can-build BLDG-DROPANIM)
=>
        (build BLDG-DROPANIM)
)

(defrule
        (difficulty <= moderate)
        (building-type-count-total BLDG-POWERCORE < 3)
        (can-build BLDG-POWERCORE)
=>
        (build BLDG-POWERCORE)
)

;poor monks
(defrule
        (military-population > thirty-percent-pop)
        (unit-type-count-total UNIT-JEDI-LINE == 0)
        (can-train UNIT-JEDI-LINE)
=>
        (train UNIT-JEDI-LINE)
)

;fair monks
(defrule
        (military-population > thirty-percent-pop)
        (unit-type-count-total UNIT-JEDI-LINE <= five-percent-pop)
        (goal jedi-rating FAIR)
        (can-train UNIT-JEDI-LINE)
=>
        (train UNIT-JEDI-LINE)
)

;good monks
(defrule
        (military-population > thirty-percent-pop)
        (unit-type-count-total UNIT-JEDI-LINE <= fifteen-percent-pop)
        (goal jedi-rating GOOD)
        (can-train UNIT-JEDI-LINE)
=>
        (train UNIT-JEDI-LINE)
)

;good monks
(defrule
        (military-population > thirty-percent-pop)
        (unit-type-count-total UNIT-JEDI4 <= fifteen-percent-pop)
        (can-train UNIT-JEDI4)
=>
        (train UNIT-JEDI4)
)

(defrule
        (goal wonder-attempt ATTACK)
        (military-population > twenty-percent-pop)
        (unit-type-count-total UNIT-BOUNTY < 3)
        (can-train UNIT-BOUNTY)
=>
        (train UNIT-BOUNTY)
)

(defrule
        (true)
=>
        (set-goal combat-supp NO)
)

;*********************************************************
;production routine
(defrule
        (unit-type-count-total SIEGE-RAM-LINE < 2)
        (unit-type-count-total SIEGE-ARTILLERY-LINE < 2)
        (unit-type-count-total UNIT-PACKED1 < 2)
        (unit-type-count-total UNIT-GRENTRP < 8)
        (game-time > 300)
        (carbon-amount > 225)
        (nova-amount > 225)
        (not (goal siege-rating EXCELLENT) )
=>
        (set-goal combat-supp FAIR)
        (generate-random-number 20)
)

(defrule
        (can-afford-unit BOAT-ARTILLERY-LINE)
        (can-afford-unit UNIT-BOMBER-LINE)
        (nor 
                (goal siege-rating EXCELLENT)
                (goal combat-supp FAIR)
        )
=>
        (generate-random-number 20)
        (set-goal combat-supp YES)
)

(defrule
        (goal siege-rating EXCELLENT)
        (difficulty <= moderate)
        (unit-type-count-total SIEGE-RAM-LINE < five-percent-pop)
        (unit-type-count-total SIEGE-ARTILLERY-LINE < five-percent-pop)
        (unit-type-count-total UNIT-PACKED1 < five-percent-pop)
        (unit-type-count-total UNIT-GRENTRP < 8)
        (carbon-amount > 225)
        (nova-amount > 225)
=>
        (set-goal combat-supp FAIR)
        (release-escrow carbon)
        (release-escrow nova)
        (generate-random-number 20)
)

(defrule
        (goal siege-rating EXCELLENT)
        (difficulty >= easy)
        (unit-type-count-total SIEGE-RAM-LINE < 2)
        (unit-type-count-total SIEGE-ARTILLERY-LINE < 1)
        (unit-type-count-total UNIT-PACKED1 < 1)
        (unit-type-count-total UNIT-GRENTRP < 4)
        (carbon-amount > 225)
        (nova-amount > 225)
=>
        (set-goal combat-supp FAIR)
        (release-escrow carbon)
        (release-escrow nova)
        (generate-random-number 20)
)

(defrule
        (goal combat-supp FAIR)
        (random-number <= 5)
        (can-train SIEGE-RAM-LINE)
=>
        (train SIEGE-RAM-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp FAIR)
        (random-number <= 10)
        (can-train SIEGE-ARTILLERY-LINE)
=>
        (train SIEGE-ARTILLERY-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp FAIR)
        (random-number <= 15)
        (can-train UNIT-GRENTRP)
=>
        (train UNIT-GRENTRP)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp FAIR)
        (random-number <= 20)
        (can-train UNIT-PACKED1)
=>
        (train UNIT-PACKED1)
        (set-goal combat-supp NO)
)

;what if we're poor & need troops?
(defrule
        (or
                (and
                        (goal siege-rating EXCELLENT)
                        (goal combat-supp NO)
                )
                (goal wonder-attempt DEFEND)
        )
        (timer-triggered t-production)
        (can-afford-unit BOAT-ARTILLERY-LINE)
        (can-afford-unit UNIT-BOMBER-LINE)
=>
        (generate-random-number 20)
        (set-goal combat-supp YES)
)

;*********************************************************
;*********************************************************
#load-if-defined EMPIRE
(defrule
        (true)
=>
        (set-goal jedi-rating GOOD)
        (set-goal siege-rating GOOD)
        (disable-self)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 8)
        (can-train UNIT-MECH3-LINE)
=>
        (train UNIT-MECH3-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 12)
        (can-train UNIT-LASER-LINE)
=>
        (train UNIT-LASER-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 16)
        (can-train UNIT-DARKTRP-LINE)
=>
        (train UNIT-DARKTRP-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 20)
        (can-train UNIT-MECH1-LINE)
=>
        (train UNIT-MECH1-LINE)
        (set-goal combat-supp NO)
)

#end-if
;*********************************************************
#load-if-defined NABOO
(defrule
        (true)
=>
        (set-goal jedi-rating GOOD)
        (set-goal siege-rating POOR)
        (disable-self)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 8)
        (can-train UNIT-BOMBER-LINE)
=>
        (train UNIT-BOMBER-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 14)
        (can-train UNIT-FIGHTER-LINE)
=>
        (train UNIT-FIGHTER-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (goal special-map WATER)
        (random-number <= 17)
        (can-train BOAT-ARTILLERY-LINE)
=>
        (train BOAT-ARTILLERY-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (not (goal special-map WATER))
        (random-number <= 17)
        (can-train UNIT-KNIGHT-LINE)
=>
        (train UNIT-KNIGHT-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 20)
        (can-train UNIT-MECH3-LINE)
=>
        (train UNIT-MECH3-LINE)
        (set-goal combat-supp NO)
)

#end-if
;*********************************************************
#load-if-defined REBEL
(defrule
        (true)
=>
        (set-goal jedi-rating GOOD)
        (set-goal siege-rating POOR)
        (disable-self)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 8)
        (can-train UNIT-BOMBER-LINE)
=>
        (train UNIT-BOMBER-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 14)
        (can-train UNIT-FIGHTER-LINE)
=>
        (train UNIT-FIGHTER-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 17)
        (can-train UNIT-LASER-LINE)
=>
        (train UNIT-LASER-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (goal special-map WATER)
        (random-number <= 20)
        (can-train BOAT-ARTILLERY-LINE)
=>
        (train BOAT-ARTILLERY-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (not (goal special-map WATER))
        (random-number <= 20)
        (can-train UNIT-MECH3-LINE)
=>
        (train UNIT-MECH3-LINE)
        (set-goal combat-supp NO)
)

#end-if
;*********************************************************
#load-if-defined WOOKIEES
(defrule
        (true)
=>
        (set-goal jedi-rating FAIR)
        (set-goal siege-rating FAIR)
        (disable-self)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 8)
        (can-train UNIT-BERSERK-LINE)
=>
        (train UNIT-BERSERK-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 10)
        (can-train UNIT-LASER-LINE)
=>
        (train UNIT-LASER-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 14)
        (can-train UNIT-BOMBER-LINE)
=>
        (train UNIT-BOMBER-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 17)
        (can-train UNIT-FIGHTER-LINE)
=>
        (train UNIT-FIGHTER-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 20)
        (can-train UNIT-MECH3-LINE)
=>
        (train UNIT-MECH3-LINE)
        (set-goal combat-supp NO)
)

#end-if
;*********************************************************
#load-if-defined FEDERATION
(defrule
        (true)
=>
        (set-goal jedi-rating FAIR)
        (set-goal siege-rating GOOD)
        (disable-self)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 8)
        (can-train UNIT-MECH3-LINE)
=>
        (train UNIT-MECH3-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 14)
        (can-train UNIT-DESTDROID-LINE)
=>
        (train UNIT-DESTDROID-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (goal special-map WATER)
        (random-number <= 17)
        (can-train BOAT-ARTILLERY-LINE)
=>
        (train BOAT-ARTILLERY-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 20)
        (can-train UNIT-LASER-LINE)
=>
        (train UNIT-LASER-LINE)
        (set-goal combat-supp NO)
)

#end-if
;*********************************************************
#load-if-defined GUNGANS
(defrule
        (true)
=>
        (set-goal jedi-rating FAIR)
        (set-goal siege-rating GOOD)
        (disable-self)
)

(defrule
        (goal combat-supp YES)
        (goal special-map WATER)
        (random-number <= 8)
        (can-train BOAT-ARTILLERY-LINE)
=>
        (train BOAT-ARTILLERY-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (goal special-map WATER)
        (random-number <= 12)
        (can-train UNIT-MECH3-LINE)
=>
        (train UNIT-MECH3-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (not (goal special-map WATER))
        (random-number <= 8)
        (can-train UNIT-MECH3-LINE)
=>
        (train UNIT-MECH3-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 16)
        (can-train UNIT-LASER-LINE)
=>
        (train UNIT-LASER-LINE)
        (set-goal combat-supp NO)
)

(defrule
        (goal combat-supp YES)
        (random-number <= 20)
        (can-train UNIT-SHIELD-LINE)
=>
        (train UNIT-SHIELD-LINE)
        (set-goal combat-supp NO)
)

#end-if

;*********************************************************
;who will be the siege meister? 
(defrule
        (difficulty <= moderate)
        (taunt-detected any-ally 230)
=>
        (set-goal siege-rating NO)
        (acknowledge-taunt this-any-ally 230)
        (disable-self)
)

(defrule
        (goal siege-rating GOOD)
        (difficulty <= moderate)
        (game-time >= 10)
        (player-computer any-ally)
=>
        (set-goal siege-rating EXCELLENT)
        (chat-to-player-using-id every-ally 22409)      ;230
        (disable-self)
)

(defrule
        (goal siege-rating FAIR)
        (difficulty <= moderate)
        (game-time >= 30)
        (player-computer any-ally)
=>
        (set-goal siege-rating EXCELLENT)
        (chat-to-player-using-id every-ally 22409)      ;230
        (disable-self)
)

(defrule
        (goal siege-rating POOR)
        (difficulty <= moderate)
        (game-time >= 50)
        (player-computer any-ally)
=>
        (set-goal siege-rating EXCELLENT)
        (chat-to-player-using-id every-ally 22409)      ;230
        (disable-self)
)

(defrule
        (goal wonder-attempt DEFEND)
        (not (goal siege-rating NO) )
=>
        (set-goal siege-rating NO)
)

(defrule
        (true)
=>
        (set-escrow-percentage carbon 40)
        (set-escrow-percentage food 0)
        (set-escrow-percentage nova 40)
        (set-escrow-percentage metal 0)
        (disable-self)
)

(defrule
        (goal siege-rating EXCELLENT)
=>
        (set-escrow-percentage carbon 70)
        (set-escrow-percentage nova 70)
        (disable-self)
)

;***************************************************
;restart emergency production timer
(defrule
        (timer-triggered t-production)
=>
        (disable-timer t-production)
        (enable-timer t-production 60)
)

;*********************************************************
#load-if-defined DIFFICULTY-EASIEST
(defrule
        (true)
=>
        (set-strategic-number sn-percent-enemy-sighted-response 10)
        (set-strategic-number sn-consecutive-idle-unit-limit 60)
        (set-strategic-number sn-easiest-reaction-percentage 20)
        (set-difficulty-parameter ability-to-maintain-distance 100)
        (set-difficulty-parameter ability-to-dodge-missiles 100)
        (disable-self)
)
#end-if
;********************************
#load-if-defined DIFFICULTY-EASY

(defrule
        (true)
=>
        (set-strategic-number sn-percent-enemy-sighted-response 25)
        (set-strategic-number sn-consecutive-idle-unit-limit 20)
        (set-strategic-number sn-easier-reaction-percentage 20)
        (set-strategic-number sn-hits-before-alliance-change 50)
        (set-difficulty-parameter ability-to-maintain-distance 75)
        (set-difficulty-parameter ability-to-dodge-missiles 75)
        (disable-self)
)
#end-if

;********************************
#load-if-defined DIFFICULTY-MODERATE

(defrule
        (true)
=>
        (set-strategic-number sn-percent-enemy-sighted-response 75)
        (set-strategic-number sn-consecutive-idle-unit-limit 5)
        (set-strategic-number sn-hits-before-alliance-change 25)
        (set-difficulty-parameter ability-to-maintain-distance 50)
        (set-difficulty-parameter ability-to-dodge-missiles 50)
        (disable-self)
)
#end-if

;********************************
#load-if-defined DIFFICULTY-HARD

(defrule
        (true)
=>
        (set-strategic-number sn-percent-enemy-sighted-response 99)
        (set-strategic-number sn-consecutive-idle-unit-limit 1)
        (set-strategic-number sn-hits-before-alliance-change 10)
        (set-difficulty-parameter ability-to-maintain-distance 0)
        (set-difficulty-parameter ability-to-dodge-missiles 0)
        (disable-self)
)
#end-if

;********************************
#load-if-defined DIFFICULTY-HARDEST

(defrule
        (true)
=>
        (set-strategic-number sn-percent-enemy-sighted-response 99)
        (set-strategic-number sn-consecutive-idle-unit-limit 1)
        (set-strategic-number sn-hits-before-alliance-change 10)
        (set-difficulty-parameter ability-to-maintain-distance 0)
        (set-difficulty-parameter ability-to-dodge-missiles 0)
        (disable-self)
)

(defrule
        (true)
=>
        (disable-timer t-chatmore)
        (enable-timer t-chatmore 1200)
        (disable-self)
)

(defrule
        (timer-triggered t-chatmore)
=>
        (cc-add-resource carbon 500)
        (cc-add-resource food 500)
        (cc-add-resource nova 500)
        (cc-add-resource metal 500)
        (disable-timer t-chatmore)
        (enable-timer t-chatmore 1200)
)

#end-if
;********************************
;********************************

(defrule
        (true)
=>
        (set-strategic-number sn-coop-share-information 1)
        (set-strategic-number sn-coop-share-attacking 1)
        (set-strategic-number sn-maximum-town-size imperial-town-size)

        (set-strategic-number sn-task-ungrouped-soldiers 0)
        (set-strategic-number sn-zero-priority-distance 250)
        (set-strategic-number sn-blot-exploration-map 0)

        (set-strategic-number sn-attack-intelligence 1)
        (set-strategic-number sn-gather-defense-units 1)
        (set-strategic-number sn-defense-distance 2)

        (set-strategic-number sn-maximum-gaia-attack-response 1)
        (set-strategic-number sn-ignore-attack-group-under-attack 1)
        (set-strategic-number sn-allow-civilian-defense 0)

        (disable-self)
)

(defrule
        (true)
=>
        (set-strategic-number sn-metal-dropsite-distance 3)
        (set-strategic-number sn-nova-dropsite-distance 3)
        (set-strategic-number sn-retask-gather-amount 20)

        (set-strategic-number sn-camp-max-distance 15)
        (set-strategic-number sn-mill-max-distance 15)
        (set-strategic-number sn-enemy-sighted-response-distance 15)
        
        (set-strategic-number sn-group-form-distance 10)
        (set-strategic-number sn-town-defend-priority 7)
        (set-strategic-number sn-nova-defend-priority 2)

        (set-strategic-number sn-metal-defend-priority 3)
        (set-strategic-number sn-forage-defend-priority 0)
        (set-strategic-number sn-holocron-defend-priority 0)

        (disable-self)
)

(defrule
        (true)
=>
        (set-strategic-number sn-cap-civilian-gatherers 100)
        (set-strategic-number sn-percent-civilian-gatherers 0)
        (set-strategic-number sn-minimum-civilian-explorers 0)

        (set-strategic-number sn-cap-civilian-explorers 0)
        (set-strategic-number sn-percent-civilian-explorers 0)
        (set-strategic-number sn-cap-civilian-builders 12)

        (set-strategic-number sn-percent-civilian-builders 100)

        (disable-self)
)

(defrule
        (or
                (building-type-count BLDG-TRAINTROOPER > 0)
                (or
                        (building-type-count BLDG-TRAINAIR > 0)
                        (building-type-count BLDG-TRAINMECH > 0)
                )
        )
=>
        (set-strategic-number sn-percent-civilian-builders 15)
        (set-strategic-number sn-percent-civilian-gatherers 85)
        (disable-self)
)

(defrule
        (strategic-number sn-percent-civilian-gatherers == 85)
        (building-type-count BLDG-GOVTCTR > 0)
=>
        (set-strategic-number sn-percent-civilian-builders 10)
        (set-strategic-number sn-percent-civilian-gatherers 90)
        (disable-self)
)

; UNIT-WORKER count
(defrule
        (can-train UNIT-WORKER)
        (civilian-population < 10)
=>
        (train UNIT-WORKER)
)

(defrule
        (can-train UNIT-WORKER)
        (civilian-population < civ-castle)
        (or
                (or
                        (carbon-amount < 1000)
                        (food-amount < 1000)
                )
                (or
                        (nova-amount < 1000)
                        (metal-amount < 1000)
                )
        )
=>
        (train UNIT-WORKER)
)

;*********************************
;buildings
(defrule
        (difficulty <= moderate)
        (housing-headroom < 5)
        (population-headroom > 0)
        (can-build BLDG-PREFAB)
=>
        (build BLDG-PREFAB)
)

#load-if-defined DIFFICULTY-EASIEST
(defrule
        (military-population < 10)
        (housing-headroom < 5)
        (population-headroom > 0)
        (can-build BLDG-PREFAB)
=>
        (build BLDG-PREFAB)
)
#end-if

#load-if-defined DIFFICULTY-EASY
(defrule
        (military-population < civ-dark-rush)
        (housing-headroom < 5)
        (population-headroom > 0)
        (can-build BLDG-PREFAB)
=>
        (build BLDG-PREFAB)
)
#end-if

(defrule
        (game-time < 900)
        (building-type-count BLDG-MAIN < 3)
        (can-build BLDG-MAIN)
=>
        (build BLDG-MAIN)
)

(defrule
        (building-type-count BLDG-DROPNOVA == 0)
        (resource-found nova)
        (can-build BLDG-DROPNOVA)
=>
        (build BLDG-DROPNOVA)
)

(defrule
        (building-type-count BLDG-DROPMETAL == 0)
        (resource-found metal)
        (can-build BLDG-DROPMETAL)
=>
        (build BLDG-DROPMETAL)
)

(defrule
        (building-type-count BLDG-DROPCARBON == 0)
        (can-build BLDG-DROPCARBON)
=>
        (build BLDG-DROPCARBON)
)

(defrule
        (game-time > 60)
        (building-type-count-total BLDG-SPACEPORT == 0)
        (can-build BLDG-SPACEPORT)
=>
        (build BLDG-SPACEPORT)
)

(defrule
        (building-type-count BLDG-GOVTCTR == 0)
        (can-build BLDG-GOVTCTR)
=>
        (build BLDG-GOVTCTR)
)

(defrule
        (building-type-count BLDG-GOVTCTR > 0)
        (building-type-count BLDG-GOVTCTR < 4)
        (can-build BLDG-GOVTCTR)
=>
        (build-forward BLDG-GOVTCTR)
)

(defrule
        (building-type-count-total BLDG-TRAINHEAVY == 0)
        (can-build BLDG-TRAINHEAVY)
=>
        (build BLDG-TRAINHEAVY)
)

(defrule
        (building-type-count-total BLDG-TRAINHEAVY <= 1)
        (goal siege-rating POOR)
        (can-build BLDG-TRAINHEAVY)
=>
        (build-forward BLDG-TRAINHEAVY)
)

(defrule
        (building-type-count-total BLDG-TRAINHEAVY > 0)
        (building-type-count-total BLDG-TRAINHEAVY <= 2)
        (goal siege-rating FAIR)
        (can-build BLDG-TRAINHEAVY)
=>
        (build-forward BLDG-TRAINHEAVY)
)

(defrule
        (building-type-count-total BLDG-TRAINHEAVY > 0)
        (building-type-count-total BLDG-TRAINHEAVY <= 3)
        (goal siege-rating GOOD)
        (can-build BLDG-TRAINHEAVY)
=>
        (build-forward BLDG-TRAINHEAVY)
)

(defrule
        (building-type-count-total BLDG-TRAINJEDI == 0)
        (can-build BLDG-TRAINJEDI)
=>
        (build BLDG-TRAINJEDI)
)

(defrule
        (building-type-count-total BLDG-TRAINJEDI <= 1)
        (goal jedi-rating FAIR)
        (can-build BLDG-TRAINJEDI)
=>
        (build BLDG-TRAINJEDI)
)

(defrule
        (building-type-count-total BLDG-TRAINJEDI <= 2)
        (goal jedi-rating GOOD)
        (can-build BLDG-TRAINJEDI)
=>
        (build BLDG-TRAINJEDI)
)

(defrule
        (building-type-count-total BLDG-TRAINTROOPER == 0)
        (can-build BLDG-TRAINTROOPER)
=>
        (build BLDG-TRAINTROOPER)
)

(defrule
        (building-type-count-total BLDG-TRAINTROOPER > 0)
        (building-type-count-total BLDG-TRAINTROOPER <= 2)
        (can-build BLDG-TRAINTROOPER)
=>
        (build-forward BLDG-TRAINTROOPER)
)

(defrule
        (building-type-count-total BLDG-TRAINTROOPER > 0)
        (building-type-count-total BLDG-TRAINTROOPER <= 3)
        (can-build BLDG-TRAINTROOPER)
=>
        (build-forward BLDG-TRAINTROOPER)
)

(defrule
        (building-type-count-total BLDG-TRAINMECH == 0)
        (can-build BLDG-TRAINMECH)
=>
        (build BLDG-TRAINMECH)
)

(defrule
        (building-type-count-total BLDG-TRAINMECH == 1)
        (can-build BLDG-TRAINMECH)
=>
        (build-forward BLDG-TRAINMECH)
)

(defrule
        (building-type-count-total BLDG-TRAINMECH > 0)
        (building-type-count-total BLDG-TRAINMECH <= 2)
        (can-build BLDG-TRAINMECH)
=>
        (build-forward BLDG-TRAINMECH)
)

(defrule
        (building-type-count-total BLDG-TRAINMECH > 0)
        (building-type-count-total BLDG-TRAINMECH <= 3)
        (can-build BLDG-TRAINMECH)
=>
        (build-forward BLDG-TRAINMECH)
)

(defrule
        (building-type-count-total BLDG-TRAINAIR == 0)
        (can-build BLDG-TRAINAIR)
=>
        (build BLDG-TRAINAIR)
)

(defrule
        (building-type-count-total BLDG-TRAINAIR == 1)
        (can-build BLDG-TRAINAIR)
=>
        (build-forward BLDG-TRAINAIR)
)

(defrule
        (building-type-count-total BLDG-TRAINAIR > 0)
        (building-type-count-total BLDG-TRAINAIR <= 3)
        (can-build BLDG-TRAINAIR)
=>
        (build-forward BLDG-TRAINAIR)
)

;***********************************
;MARKET STUFF
;***********************************
(defrule
        (carbon-amount > 500)
        (or
                (food-amount < 200)
                (or
                        (nova-amount < 225)
                        (and
                                (goal wonder-attempt DEFEND)
                                (metal-amount < 125)
                        )
                )
        )
        (can-sell-commodity carbon)
=>
        (sell-commodity carbon)
)

(defrule
        (food-amount > 500)
        (or
                (carbon-amount < 225)
                (or
                        (nova-amount < 225)
                        (and
                                (goal wonder-attempt DEFEND)
                                (metal-amount < 125)
                        )
                )
        )
        (can-sell-commodity food)
=>
        (sell-commodity food)
)

(defrule
        (metal-amount < 650)
        (nova-amount > 500)
        (commodity-buying-price metal < 200)
        (can-buy-commodity metal)
=>
        (buy-commodity metal)
)

(defrule
        (carbon-amount < 225)
        (nova-amount > 500)
        (commodity-buying-price carbon < 200)
        (can-buy-commodity carbon)
=>
        (buy-commodity carbon)
)

(defrule
        (food-amount < 200)
        (nova-amount > 500)
        (commodity-buying-price food < 200)
        (can-buy-commodity food)
=>
        (buy-commodity food)
)

;*******************************
;counterunits
;train specialty units
(defrule
        (unit-type-count-total UNIT-MISSILE-LINE < 1)
        (can-train UNIT-MISSILE-LINE)
        (or
                (or
                        (cc-players-unit-type-count any-enemy UNIT-FIGHTER-LINE >= five-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-BOMBER-LINE >= five-percent-pop)
                )
                (or
                        (cc-players-unit-type-count any-enemy UNIT-AIRSPEEDER-LINE >= five-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-AIRTRANS-LINE >= five-percent-pop)
                )
        )
=>
        (train UNIT-MISSILE-LINE)
)

(defrule
        (unit-type-count-total BOAT-MISSILE-LINE < 1)
        (can-train BOAT-MISSILE-LINE)
        (or
                (or
                        (cc-players-unit-type-count any-enemy UNIT-FIGHTER-LINE >= five-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-BOMBER-LINE >= five-percent-pop)
                )
                (or
                        (cc-players-unit-type-count any-enemy UNIT-AIRSPEEDER-LINE >= five-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-AIRTRANS-LINE >= five-percent-pop)
                )
        )
=>
        (train BOAT-MISSILE-LINE)
)

(defrule
        (unit-type-count-total SIEGE-MISSILE-LINE < 1)
        (can-train SIEGE-MISSILE-LINE)
        (or
                (or
                        (cc-players-unit-type-count any-enemy UNIT-FIGHTER-LINE >= five-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-BOMBER-LINE >= five-percent-pop)
                )
                (or
                        (cc-players-unit-type-count any-enemy UNIT-AIRSPEEDER-LINE >= five-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-AIRTRANS-LINE >= five-percent-pop)
                )
        )
=>
        (train SIEGE-MISSILE-LINE)
)

(defrule
        (unit-type-count-total UNIT-MISSILE-LINE < five-percent-pop)
        (can-train UNIT-MISSILE-LINE)
        (or
                (or
                        (cc-players-unit-type-count any-enemy UNIT-FIGHTER-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-BOMBER-LINE >= ten-percent-pop)
                )
                (or
                        (cc-players-unit-type-count any-enemy UNIT-AIRSPEEDER-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-AIRTRANS-LINE >= ten-percent-pop)
                )
        )
=>
        (train UNIT-MISSILE-LINE)
)

(defrule
        (unit-type-count-total BOAT-MISSILE-LINE < five-percent-pop)
        (can-train BOAT-MISSILE-LINE)
        (or
                (or
                        (cc-players-unit-type-count any-enemy UNIT-FIGHTER-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-BOMBER-LINE >= ten-percent-pop)
                )
                (or
                        (cc-players-unit-type-count any-enemy UNIT-AIRSPEEDER-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-AIRTRANS-LINE >= ten-percent-pop)
                )
        )
=>
        (train BOAT-MISSILE-LINE)
)

(defrule
        (unit-type-count-total SIEGE-MISSILE-LINE < five-percent-pop)
        (can-train SIEGE-MISSILE-LINE)
        (or
                (or
                        (cc-players-unit-type-count any-enemy UNIT-FIGHTER-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-BOMBER-LINE >= ten-percent-pop)
                )
                (or
                        (cc-players-unit-type-count any-enemy UNIT-AIRSPEEDER-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-AIRTRANS-LINE >= ten-percent-pop)
                )
        )
=>
        (train SIEGE-MISSILE-LINE)
)

(defrule
        (unit-type-count-total UNIT-BOUNTY < 1)
        (can-train UNIT-BOUNTY)
        (or
                (cc-players-unit-type-count any-enemy UNIT-JEDI-LINE >= five-percent-pop)
                (cc-players-unit-type-count any-enemy UNIT-JEDI4 >= five-percent-pop)
        )
=>
        (train UNIT-BOUNTY)
)

(defrule
        (unit-type-count-total UNIT-BOUNTY < five-percent-pop)
        (can-train UNIT-BOUNTY)
        (or
                (cc-players-unit-type-count any-enemy UNIT-JEDI-LINE >= ten-percent-pop)
                (cc-players-unit-type-count any-enemy UNIT-JEDI4 >= ten-percent-pop)
        )
=>
        (train UNIT-BOUNTY)
)

(defrule
        (unit-type-count-total UNIT-MECH1-LINE < 1)
        (can-train UNIT-MECH1-LINE)
        (or
                (or
                        (cc-players-unit-type-count any-enemy UNIT-LASER-LINE >= five-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-MOUNTED-LINE >= five-percent-pop)
                )
                (or
                        (or
                                (cc-players-unit-type-count any-enemy UNIT-MISSILE-LINE >= five-percent-pop)
                                (cc-players-unit-type-count any-enemy UNIT-GRENTRP >= five-percent-pop)
                        )
                        (or
                                (cc-players-unit-type-count any-enemy UNIT-DARKTRP-LINE >= five-percent-pop)
                                (cc-players-unit-type-count any-enemy UNIT-BERSERK-LINE >= five-percent-pop)
                        )
                )
        )
=>
        (train UNIT-MECH1-LINE)
)

(defrule
        (unit-type-count-total UNIT-MECH1-LINE < five-percent-pop)
        (can-train UNIT-MECH1-LINE)
        (or
                (or
                        (cc-players-unit-type-count any-enemy UNIT-LASER-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-MOUNTED-LINE >= ten-percent-pop)
                )
                (or
                        (or
                                (cc-players-unit-type-count any-enemy UNIT-MISSILE-LINE >= ten-percent-pop)
                                (cc-players-unit-type-count any-enemy UNIT-GRENTRP >= ten-percent-pop)
                        )
                        (or
                                (cc-players-unit-type-count any-enemy UNIT-DARKTRP-LINE >= ten-percent-pop)
                                (cc-players-unit-type-count any-enemy UNIT-BERSERK-LINE >= ten-percent-pop)
                        )
                )
        )
=>
        (train UNIT-MECH1-LINE)
)

(defrule
        (unit-type-count-total UNIT-GRENTRP < 1)
        (can-train UNIT-GRENTRP)
        (or
                (or
                        (cc-players-unit-type-count any-enemy UNIT-MECH1-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-MECH2-LINE >= ten-percent-pop)
                )
                (or
                        (or
                                (cc-players-unit-type-count any-enemy UNIT-MECH3-LINE >= ten-percent-pop)
                                (cc-players-unit-type-count any-enemy UNIT-KNIGHT-LINE >= ten-percent-pop)
                        )
                        (cc-players-unit-type-count any-enemy UNIT-DESTDROID-LINE >= ten-percent-pop)
                )
        )
=>
        (train UNIT-GRENTRP)
)

(defrule
        (unit-type-count-total UNIT-GRENTRP < five-percent-pop)
        (can-train UNIT-GRENTRP)
        (or
                (or
                        (cc-players-unit-type-count any-enemy UNIT-MECH1-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-MECH2-LINE >= ten-percent-pop)
                )
                (or
                        (or
                                (cc-players-unit-type-count any-enemy UNIT-MECH3-LINE >= ten-percent-pop)
                                (cc-players-unit-type-count any-enemy UNIT-KNIGHT-LINE >= ten-percent-pop)
                        )
                        (cc-players-unit-type-count any-enemy UNIT-DESTDROID-LINE >= ten-percent-pop)
                )
        )
=>
        (train UNIT-GRENTRP)
)

(defrule
        (unit-type-count-total UNIT-MOUNTED-LINE < 1)
        (can-train UNIT-MOUNTED-LINE)
        (or
                (or
                        (cc-players-unit-type-count any-enemy SIEGE-ARTILLERY-LINE >= five-percent-pop)
                        (cc-players-unit-type-count any-enemy SIEGE-RAM-LINE >= five-percent-pop)
                )
                (or
                        (cc-players-unit-type-count any-enemy SIEGE-MISSILE-LINE >= five-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-PACKED1 >= five-percent-pop)
                )
        )
=>
        (train UNIT-MOUNTED-LINE)
)

(defrule
        (unit-type-count-total UNIT-MOUNTED-LINE < five-percent-pop)
        (can-train UNIT-MOUNTED-LINE)
        (or
                (or
                        (cc-players-unit-type-count any-enemy SIEGE-ARTILLERY-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy SIEGE-RAM-LINE >= ten-percent-pop)
                )
                (or
                        (cc-players-unit-type-count any-enemy SIEGE-MISSILE-LINE >= ten-percent-pop)
                        (cc-players-unit-type-count any-enemy UNIT-PACKED1 >= ten-percent-pop)
                )
        )
=>
        (train UNIT-MOUNTED-LINE)
)

;***********************************
;walls
(defrule
        (not (goal wall-build YES) )
=>
        (set-goal wall-build NO)
)

(defrule
        (goal wall-build YES)
        (can-afford-complete-wall 2 BLDG-BARRIER-LINE)
        (can-build-wall-with-escrow 2 BLDG-BARRIER-LINE)
=>
        (release-escrow metal)
        (build-wall 2 BLDG-BARRIER-LINE)
)

(defrule
        (goal wall-build YES)
        (building-type-count-total BLDG-GATE < 4)
        (can-build-gate-with-escrow 2)
=>
        (release-escrow metal)
        (build-gate 2)
)

(defrule
        (goal wall-build YES)
        (wall-completed-percentage 2 == 100)
=>
        (set-goal wall-build NO)
        (disable-self)
)

;***********************************
;towers
(defrule
        (building-type-count-total BLDG-GOVTCTR > 1)
        (building-type-count-total BLDG-TURRET-LINE < 2)
        (can-build BLDG-TURRET-LINE)
        (or
                (goal wall-build NO)
                (wall-completed-percentage 2 == 100)
        )
=>
        (build BLDG-TURRET-LINE)
)

(defrule
        (building-type-count-total BLDG-GOVTCTR > 2)
        (building-type-count-total BLDG-TURRET-LINE < 5)
        (can-build BLDG-TURRET-LINE)
        (or
                (goal wall-build NO)
                (wall-completed-percentage 2 == 100)
        )
=>
        (build BLDG-TURRET-LINE)
)

(defrule
        (building-type-count-total BLDG-GOVTCTR > 3)
        (can-build BLDG-TURRET-LINE)
        (or
                (goal wall-build NO)
                (wall-completed-percentage 2 == 100)
        )
=>
        (build BLDG-TURRET-LINE)
)

(defrule
        (building-type-count-total BLDG-GOVTCTR > 1)
        (building-type-count-total BLDG-MISSILE-LINE < 2)
        (can-build BLDG-MISSILE-LINE)
        (or
                (goal wall-build NO)
                (wall-completed-percentage 2 == 100)
        )
=>
        (build BLDG-MISSILE-LINE)
)

(defrule
        (building-type-count-total BLDG-GOVTCTR > 2)
        (building-type-count-total BLDG-MISSILE-LINE < 5)
        (can-build BLDG-MISSILE-LINE)
        (or
                (goal wall-build NO)
                (wall-completed-percentage 2 == 100)
        )
=>
        (build BLDG-MISSILE-LINE)
)

(defrule
        (building-type-count-total BLDG-GOVTCTR > 3)
        (can-build BLDG-MISSILE-LINE)
        (or
                (goal wall-build NO)
                (wall-completed-percentage 2 == 100)
        )
=>
        (build BLDG-MISSILE-LINE)
)

;**********************************************
;attack groups
(defrule
        (goal wonder-attempt ATTACK)
=>
        (enable-timer t-attackgroup 30)
        (disable-self)
)

(defrule
        (goal wonder-attempt ATTACK)
        (timer-triggered t-attackgroup)
        (population >= unit-max)
=>
        (set-goal military-parity YES)
)

(defrule
        (goal wonder-attempt ATTACK)
        (timer-triggered t-attackgroup)
        (or
                (military-population >= twenty-percent-pop)
                (or
                        (and
                                (players-military-population any-enemy < fifteen-percent-pop)
                                (military-population >= fifteen-percent-pop)
                        )
                        (and
                                (players-military-population any-enemy < ten-percent-pop)
                                (military-population >= ten-percent-pop)
                        )
                )
        )
=>
        (set-goal military-parity YES)
)

(defrule
        (goal military-parity YES)
        (unit-type-count-total UNIT-PACKED1 == 0)
        (unit-type-count-total SIEGE-RAM-LINE == 0)
        (unit-type-count-total SIEGE-ARTILLERY-LINE == 0)
        (unit-type-count-total UNIT-GRENTRP < 3)
        (military-population < twenty-percent-pop)
=>
        (set-goal military-parity NO)
)

(defrule
        (taunt-detected any-ally 201)
=>
        (acknowledge-taunt this-any-ally 201)
        (attack-now)
        (set-goal military-parity YES)
)

(defrule
        (goal military-parity YES)
=>
        (set-strategic-number sn-percent-attack-soldiers 100)
        (set-strategic-number sn-percent-attack-boats 100)
        (set-strategic-number sn-percent-attack-air 100)
        (attack-now)
        (chat-to-player-using-id every-ally 22406)      ;201
        (chat-to-player-using-id any-human-ally 22117)
                ;"39 Attack now!"
)

(defrule
        (goal military-parity NO)
        (timer-triggered t-attackgroup)
        (or
                (or
                        (unit-type-count BOAT-LASER-LINE > 0)
                        (unit-type-count BOAT-CUTLASER-LINE > 0)
                )
                (unit-type-count BOAT-ARTILLERY-LINE > 0)
        )
=>
        (set-strategic-number sn-percent-attack-soldiers 0)
        (set-strategic-number sn-percent-attack-boats 100)
        (set-strategic-number sn-percent-attack-air 0)
        (attack-now)
)

(defrule
        (goal military-parity NO)
        (timer-triggered t-attackgroup)
        (or
                (or
                        (unit-type-count UNIT-FIGHTER-LINE > 0)
                        (unit-type-count UNIT-BOMBER-LINE > 0)
                )
                (unit-type-count UNIT-AIRSPEEDER-LINE > 0)
        )
=>
        (set-strategic-number sn-percent-attack-soldiers 0)
        (set-strategic-number sn-percent-attack-boats 0)
        (set-strategic-number sn-percent-attack-air 100)
        (attack-now)
)

(defrule
        (timer-triggered t-attackgroup)
=>
        (set-goal military-parity NO)
        (disable-timer t-attackgroup)
        (enable-timer t-attackgroup 30)
)

(defrule
        (goal wonder-attempt ATTACK)
=>
        (set-strategic-number sn-special-attack-type3 1)
        (disable-self)
)

